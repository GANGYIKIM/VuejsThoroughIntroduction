{"remainingRequest":"C:\\Users\\hjjeon\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hjjeon\\dev\\vuejs\\test\\vuex\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hjjeon\\dev\\vuejs\\test\\vuex\\App.vue","mtime":1609924929703},{"path":"C:\\Users\\hjjeon\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\hjjeon\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hjjeon\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data: function data(){\r\n    return {\r\n      // temp taskName\r\n      newTaskName: '',\r\n\r\n      // temp label linked new task\r\n      newTaskLabelIds: [],\r\n\r\n      //temp new label\r\n      newLabelText: ''\r\n    }\r\n  },\r\n  computed: {\r\n    tasks() {\r\n      return this.$store.getters.filteredTasks // get task list\r\n    },\r\n    labels() {\r\n      return this.$store.state.labels\r\n    },\r\n    filter() {\r\n      return this.$store.state.filter\r\n    }\r\n  },\r\n  methods: {\r\n    addTask(){\r\n      this.$store.commit('addTask', {\r\n        name: this.newTaskName,\r\n        labelIds: this.newTaskLabelIds\r\n      })\r\n      this.newTaskName = ''\r\n      this.newTaskLabelIds = []\r\n    },\r\n    toggleTaskStatus(task) {\r\n      this.$store.commit('toggleTaskStatus', {id: task.id})\r\n    },\r\n    addLabel() {\r\n      this.$store.commit('addLabel', {text: this.newLabelText})\r\n    },\r\n    getLabelText(id) {\r\n      const label = this.labels.filter(label => label.id === id)[0];\r\n      return label ? label.text : '';\r\n    },\r\n    changeFilter(labelId) {\r\n      this.$store.commit('changeFilter', {filter: labelId})\r\n    },\r\n    save() {\r\n      this.$store.dispatch('save')\r\n    },\r\n    restore() {\r\n      this.$store.dispatch('restore')\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\r\n<div>\r\n  <h2>태스크 목록</h2>\r\n  <ul>\r\n    <li v-for=\"task in tasks\" v-bind:key=\"task.id\">\r\n      <input type=\"checkbox\" v-bind:checked=\"task.done\" v-on:change=\"toggleTaskStatus(task)\">\r\n      {{task.name}} -\r\n      <span v-for=\"id in task.labelIds\" v-bind:key=\"id\">\r\n        {{getLabelText(id)}}\r\n      </span>\r\n    </li>\r\n  </ul>\r\n  <form v-on:submit.prevent=\"addTask\">\r\n    <input type=\"text\" v-model=\"newTaskName\" placeholder=\"new task\">\r\n  </form>\r\n\r\n  <h2>레이블 목록</h2>\r\n  <ul>\r\n    <li v-for=\"label in labels\" v-bind:key=\"label.id\">\r\n      <input type=\"checkbox\" v-bind:value=\"label.id\" v-model=\"newTaskLabelIds\">\r\n      {{ label.text }}\r\n    </li>\r\n  </ul>\r\n  <form v-on:submit.prevent=\"addLabel\">\r\n    <input type=\"text\" v-model=\"newLabelText\" placeholder=\"new label\">\r\n  </form>\r\n\r\n  <h2>레이블로 필터링된 목록</h2>\r\n  <ul>\r\n    <li v-for=\"label in labels\" v-bind:key=\"label.id\">\r\n      <input type=\"radio\" v-bind:checked=\"label.id === filter\" v-on:change=\"changeFilter(label.id)\" >\r\n      {{ label.text }}\r\n    </li>\r\n    <li>\r\n      <input type=\"radio\" v-bind:checked=\"filter === null\" v-on:change=\"changeFilter(null)\" >\r\n      필터링 없음\r\n    </li>\r\n  </ul>\r\n  <form v-on:submit.prevent=\"addLabel\">\r\n    <input type=\"text\" v-model=\"newLabelText\" placeholder=\"new label\">\r\n  </form>\r\n\r\n  <h2>저장 및 복원</h2>\r\n  <button type=\"button\" v-on:click=\"save\">저장</button>\r\n  <button type=\"button\" v-on:click=\"restore\">복원</button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: function data(){\r\n    return {\r\n      // temp taskName\r\n      newTaskName: '',\r\n\r\n      // temp label linked new task\r\n      newTaskLabelIds: [],\r\n\r\n      //temp new label\r\n      newLabelText: ''\r\n    }\r\n  },\r\n  computed: {\r\n    tasks() {\r\n      return this.$store.getters.filteredTasks // get task list\r\n    },\r\n    labels() {\r\n      return this.$store.state.labels\r\n    },\r\n    filter() {\r\n      return this.$store.state.filter\r\n    }\r\n  },\r\n  methods: {\r\n    addTask(){\r\n      this.$store.commit('addTask', {\r\n        name: this.newTaskName,\r\n        labelIds: this.newTaskLabelIds\r\n      })\r\n      this.newTaskName = ''\r\n      this.newTaskLabelIds = []\r\n    },\r\n    toggleTaskStatus(task) {\r\n      this.$store.commit('toggleTaskStatus', {id: task.id})\r\n    },\r\n    addLabel() {\r\n      this.$store.commit('addLabel', {text: this.newLabelText})\r\n    },\r\n    getLabelText(id) {\r\n      const label = this.labels.filter(label => label.id === id)[0];\r\n      return label ? label.text : '';\r\n    },\r\n    changeFilter(labelId) {\r\n      this.$store.commit('changeFilter', {filter: labelId})\r\n    },\r\n    save() {\r\n      this.$store.dispatch('save')\r\n    },\r\n    restore() {\r\n      this.$store.dispatch('restore')\r\n    }\r\n  }\r\n}\r\n</script>"]}]}